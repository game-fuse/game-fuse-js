class GameFuse{static request;constructor(){this.id="",this.token="",this.name="",this.description="",this.verboseLogging=!1,this.store=[],this.leaderboardEntries=[]}static get Instance(){return this._instance||(this._instance=new GameFuse),this._instance}static getBaseURL(){return"https://gamefuse.co/api/v1"}static getGameId(){return this.Instance.id}static getGameName(){return this.Instance.name}static getGameDescription(){return this.Instance.description}static getGameToken(){return this.Instance.token}static getVerboseLogging(){return this.Instance.verboseLogging}static setVerboseLogging(e){this.Instance.verboseLogging=e}static Log(e){this.getVerboseLogging()&&console.log(`%c ${e}`,"color=green")}Log(e){GameFuse.Log(e)}static setUpGame(e,t,s,a={}){this.Log(`GameFuse Setting Up Game: ${e}: ${t}`),this.Instance.setUpGamePrivate(e,t,s,a)}setUpGamePrivate(e,t,s,a={}){this.setUpGameRoutine(e,t,s,a)}async setUpGameRoutine(e,t,s,a={}){var i=`game_id=${e}&game_token=${t}`;"seedStore"==a.seedStore&&(i+="&seed_store=true"),this.Log(`GameFuse Setting Up Game Sending Request: ${GameFuse.getBaseURL()}/games/verify?${i}`);let r=await GameFuseUtilities.processRequest(`${GameFuse.getBaseURL()}/games/verify?${i}`);r.data.error?(this.Log(`GameFuse Setting Up Game Received Request Failure: ${e}: ${t}`),GameFuseUtilities.HandleCallback(void 0!==r?r:void 0,"Game has failed to set up!",s,!1)):(this.Log(`GameFuse Setting Up Game Received Request Success: ${e}: ${t}`),this.id=r.data.id.toString(),this.name=r.data.name,this.description=r.data.description,this.token=r.data.token,this.downloadStoreItemsPrivate(s))}static fetchGameVariables(e,t,s,a={}){this.Instance.fetchGameVariablesPrivate(e,t,s,a)}fetchGameVariablesPrivate(e,t,s,a={}){this.fetchGameVariablesRoutine(e,t,s,a)}async fetchGameVariablesRoutine(e,t,s,a={}){var i=`game_id=${e}&game_token=${t}`;"seedStore"==a.seedStore&&(i+="&seed_store=true"),this.Log(`GameFuse Setting Up Game Sending Request: ${GameFuse.getBaseURL()}/games/fetch_game_variables?${i}`);let r=await GameFuseUtilities.processRequest(`${GameFuse.getBaseURL()}/games/fetch_game_variables?${i}`);r.data.error?(this.Log(`GameFuse Setting Up Game Received Request Failure: ${e}: ${t}`),GameFuseUtilities.HandleCallback(void 0!==r?r:void 0,"Game has failed to set up!",s,!1)):(this.Log(`GameFuse Setting Up Game Received Request Success: ${e}: ${t}`),this.id=r.data.id.toString(),this.name=r.data.name,this.description=r.data.description,this.token=r.data.token,this.game_variables=r.data.game_variables,this.downloadStoreItemsPrivate(s))}downloadStoreItemsPrivate(e){this.downloadStoreItemsRoutine(e)}async downloadStoreItemsRoutine(e){this.Log("GameFuse Downloading Store Items");let t=`game_id=${this.id}&game_token=${this.token}`,s=await GameFuseUtilities.processRequest(`${GameFuse.getBaseURL()}/games/store_items?${t}`),a=await GameFuseUtilities.requestIsOk(s);a?(this.Log("GameFuse Downloading Store Items Success"),this.Log(s.data.store_items),this.store=s.data.store_items.map(e=>new GameFuseStoreItem(e.name,e.category,e.description,parseInt(e.cost),parseInt(e.id),e.icon_url))):(GameFuseUtilities.HandleCallback(void 0!==s?s:void 0,"Game has failed to set up!",e,!1),this.Log("GameFuse Downloading Store Items Failed")),GameFuseUtilities.HandleCallback(void 0!==s?s:void 0,"Game has been set up!",e,!0)}static getStoreItems(){return this.Instance.store}static signIn(e,t,s){this.Instance.signInPrivate(e,t,s)}async signInPrivate(e,t,s){await this.signInRoutine(e,t,s)}async signInRoutine(e,t,s){if(this.Log(`GameFuse Sign In: ${e}`),null==GameFuse.getGameId())throw Error("Please set up your game with PainLessAuth.SetUpGame before signing in users");let a=new FormData;a.append("email",e),a.append("password",t),a.append("game_id",GameFuse.getGameId());let i=await GameFuseUtilities.processRequest(`${GameFuse.getBaseURL()}/sessions`,{method:"POST",body:a}),r=await GameFuseUtilities.requestIsOk(i);r?(this.Log(`GameFuse Sign In Success: ${e}`),GameFuseUser.CurrentUser.setSignedInInternal(),GameFuseUser.CurrentUser.setScoreInternal(parseInt(i.data.score)),GameFuseUser.CurrentUser.setCreditsInternal(parseInt(i.data.credits)),GameFuseUser.CurrentUser.setUsernameInternal(i.data.username),GameFuseUser.CurrentUser.setLastLoginInternal(new Date(i.data.last_login)),GameFuseUser.CurrentUser.setNumberOfLoginsInternal(parseInt(i.data.number_of_logins)),GameFuseUser.CurrentUser.setAuthenticationTokenInternal(i.data.authentication_token),GameFuseUser.CurrentUser.setIDInternal(parseInt(i.data.id)),GameFuseUser.CurrentUser.downloadAttributes(!0,s)):(this.Log(`GameFuse Sign In Failure: ${e}`),GameFuseUtilities.HandleCallback(void 0!==i?i:void 0,"User has been signed in successfully",s,!0))}static signUp(e,t,s,a,i){this.Instance.signUpPrivate(e,t,s,a,i)}signUpPrivate(e,t,s,a,i){this.signUpRoutine(e,t,s,a,i)}async signUpRoutine(e,t,s,a,i){if(console.log("GameFuse Sign Up: "+e),null==GameFuse.getGameId())throw new GameFuseException("Please set up your game with PainLessAuth.SetUpGame before signing up users");let r=new FormData;r.append("email",e),r.append("password",t),r.append("password_confirmation",s),r.append("username",a),r.append("game_id",GameFuse.getGameId()),r.append("game_token",GameFuse.getGameToken());try{let n=await GameFuseUtilities.processRequest(GameFuse.getBaseURL()+"/users",{method:"POST",body:r});GameFuseUtilities.RequestIsSuccessful(n)?(console.log("GameFuse Sign Up Success: "+e),GameFuseUser.CurrentUser.setSignedInInternal(),GameFuseUser.CurrentUser.setScoreInternal(parseInt(n.data.score)),GameFuseUser.CurrentUser.setCreditsInternal(parseInt(n.data.credits)),GameFuseUser.CurrentUser.setUsernameInternal(n.data.username),GameFuseUser.CurrentUser.setLastLoginInternal(new Date(n.data.last_login)),GameFuseUser.CurrentUser.setNumberOfLoginsInternal(parseInt(n.data.number_of_logins)),GameFuseUser.CurrentUser.setAuthenticationTokenInternal(n.data.authentication_token),GameFuseUser.CurrentUser.setIDInternal(parseInt(n.data.id)),await GameFuseUser.CurrentUser.downloadAttributes(!0,i)):(console.log("GameFuse Sign Up Failure: "+e),await GameFuseUtilities.HandleCallback(void 0!==n?n:void 0,"User could not sign up: "+n.error,i,!1))}catch(o){console.error("GameFuse Sign Up Error: "+o),null!==i&&i("An unknown error occurred: "+o,!0)}}getLeaderboard(e,t,s,a){this.getLeaderboardRoutine(e,t,s,a)}async getLeaderboardRoutine(e,t,s,a){try{if(GameFuse.Log("GameFuse Get Leaderboard: "+e.toString()),null==GameFuse.getGameId())throw new GameFuseException("Please set up your game with GameFuse.SetUpGame before modifying users");let i="?authentication_token="+GameFuseUser.CurrentUser.getAuthenticationToken()+"&limit="+e.toString()+"&one_per_user="+t.toString()+"&leaderboard_name="+s.toString(),r=GameFuse.getBaseURL()+"/games/"+GameFuse.getGameId()+"/leaderboard_entries"+i,n=await GameFuseUtilities.processRequest(r,{method:"GET",headers:{"Content-Type":"application/json",authentication_token:GameFuseUser.CurrentUser.getAuthenticationToken()}}),o=await GameFuseUtilities.requestIsOk(n);if(o){GameFuse.Log("GameFuse Get Leaderboard Success: : "+e.toString());let u=n.data.leaderboard_entries;for(let d of(GameFuse.Instance.leaderboardEntries=[],u))GameFuse.Instance.leaderboardEntries.push(new GameFuseLeaderboardEntry(d.username,parseInt(d.score),d.leaderboard_name,d.extra_attributes,parseInt(d.game_user_id),d.created_at))}GameFuseUtilities.HandleCallback(void 0!==n?n:void 0,"Leaderboard recieved",a,!0)}catch(m){console.log(m),GameFuseUtilities.HandleCallback("undefined"!=typeof response?response:void 0,m.message,a,!1)}}static sendPasswordResetEmail(e,t){this.Instance.sendPasswordResetEmailPrivate(e,t)}async sendPasswordResetEmailPrivate(e,t){await this.sendPasswordResetEmailRoutine(e,t)}async sendPasswordResetEmailRoutine(e,t){if(this.Log(`GameFuse Send Password Reset: ${e}`),null==GameFuse.getGameId())throw Error("Please set up your game with PainLessAuth.SetUpGame before signing in users");let s="?game_token="+GameFuse.getGameToken()+"&game_id="+GameFuse.getGameId().toString()+"&email="+e,a=GameFuse.getBaseURL()+"/games/"+GameFuse.getGameId()+"/forget_password"+s,i=await GameFuseUtilities.processRequest(a,{method:"GET",headers:{"Content-Type":"application/json",authentication_token:GameFuseUser.CurrentUser.getAuthenticationToken()}}),r=await GameFuseUtilities.requestIsOk(i);r?GameFuseUtilities.HandleCallback(void 0!==i?i:void 0,void 0,t):GameFuseUtilities.HandleCallback(void 0!==i?i:"undefined","an error occured",t,!1)}}class GameFuseLeaderboardEntry{constructor(e,t,s,a,i,r){this.username=e,this.score=t,this.leaderboard_name=s,this.extra_attributes=a,this.game_user_id=i,this.created_at=r}getUsername(){return this.username}getScore(){return this.score}getLeaderboardName(){return this.leaderboard_name}getTimestamp(){return this.created_at}getExtraAttributes(){let e=this.extra_attributes.replace("\\","").replace("{","").replace("}","").replace(", ",",").replace(": ",":").split(",").map(e=>e.split(":")).filter(e=>2===e.length).reduce((e,[t,s])=>(e[t.replace('"',"")]=s.replace('"',""),e),{});return e}}class GameFuseStoreItem{constructor(e,t,s,a,i,r){this.name=e,this.category=t,this.description=s,this.cost=a,this.id=i,this.icon_url=r}getName(){return this.name}getCategory(){return this.category}getDescription(){return this.description}getCost(){return this.cost}getId(){return this.id}getIconUrl(){return this.icon_url}}class GameFuseUser{constructor(e=!1,t=0,s,a="",i="",r=0,n=0,o=0,u={},d=[]){this.signedIn=e,this.numberOfLogins=t,this.lastLogin=s,this.authenticationToken=a,this.username=i,this.score=r,this.credits=n,this.id=o,this.attributes=u,this.purchasedStoreItems=d}static get CurrentUser(){return this._instance||(this._instance=new GameFuseUser),this._instance}setSignedInInternal(){this.signedIn=!0}setNumberOfLoginsInternal(e){this.numberOfLogins=e}setLastLoginInternal(e){this.lastLogin=e}setAuthenticationTokenInternal(e){this.authenticationToken=e}setUsernameInternal(e){this.username=e}setScoreInternal(e){this.score=e}setCreditsInternal(e){this.credits=e}setIDInternal(e){this.id=e}IsSignedIn(){return this.signedIn}getNumberOfLogins(){return this.numberOfLogins}getLastLogin(){return this.lastLogin}getAuthenticationToken(){return this.authenticationToken}getUsername(){return this.username}getScore(){return this.score}getCredits(){return this.credits}getID(){return this.id}async addCredits(e,t){try{if(GameFuse.Log("GameFuseUser Add Credits: "+e.toString()),null==GameFuse.getGameId())throw new GameFuseException("Please set up your game with GameFuse.SetUpGame before modifying users");let s=GameFuse.getBaseURL()+"/users/"+GameFuseUser.CurrentUser.id+"/add_credits",a={authentication_token:GameFuseUser.CurrentUser.getAuthenticationToken(),credits:e},i=await GameFuseUtilities.processRequest(s,{method:"POST",headers:{"Content-Type":"application/json",authentication_token:GameFuseUser.CurrentUser.getAuthenticationToken()},body:JSON.stringify(a)}),r=await GameFuseUtilities.requestIsOk(i);r?(GameFuse.Log("GameFuseUser Add Credits Success: "+e.toString()),this.setCreditsInternal(parseInt(i.data.credits)),GameFuseUtilities.HandleCallback(void 0!==i?i:void 0,"Credits Added!",t,!0)):(GameFuse.Log("GameFuseUser Add Credits Failure: "+e.toString()),GameFuseUtilities.HandleCallback(void 0!==i?i:void 0,"Credits Failed To Add!",t,!1))}catch(n){console.log(n),GameFuseUtilities.HandleCallback("undefined"!=typeof response?response:void 0,n.message,t,!1)}}async setCredits(e,t){try{if(GameFuse.Log("GameFuseUser Set Credits: "+e.toString()),null==GameFuse.getGameId())throw new GameFuseException("Please set up your game with GameFuse.SetUpGame before modifying users");let s=GameFuse.getBaseURL()+"/users/"+GameFuseUser.CurrentUser.id+"/set_credits",a={authentication_token:GameFuseUser.CurrentUser.getAuthenticationToken(),credits:e},i=await GameFuseUtilities.processRequest(s,{method:"POST",headers:{"Content-Type":"application/json",authentication_token:GameFuseUser.CurrentUser.getAuthenticationToken()},body:JSON.stringify(a)}),r=await GameFuseUtilities.requestIsOk(i);r?(GameFuse.Log("GameFuseUser Set Credits Success: "+e.toString()),this.setCreditsInternal(parseInt(json.credits))):GameFuse.Log("GameFuseUser Set Credits Failure: "+e.toString()),GameFuseUtilities.HandleCallback(void 0!==i?i:void 0,"Credits Added!",t,!0)}catch(n){console.log(n),GameFuseUtilities.HandleCallback("undefined"!=typeof response?response:void 0,n.message,t,!1)}}async addScore(e,t){try{if(GameFuse.Log("GameFuseUser Add Score: "+e.toString()),null==GameFuse.getGameId())throw new GameFuseException("Please set up your game with GameFuse.SetUpGame before modifying users");let s=GameFuse.getBaseURL()+"/users/"+GameFuseUser.CurrentUser.id+"/add_score",a={authentication_token:GameFuseUser.CurrentUser.getAuthenticationToken(),score:e},i=await GameFuseUtilities.processRequest(s,{method:"POST",headers:{"Content-Type":"application/json",authentication_token:GameFuseUser.CurrentUser.getAuthenticationToken()},body:JSON.stringify(a)}),r=await GameFuseUtilities.requestIsOk(i);r&&(GameFuse.Log("GameFuseUser Add Score Succcess: "+e.toString()),this.SetScoreInternal(parseInt(i.data.score))),GameFuseUtilities.HandleCallback(void 0!==i?i:void 0,"Score has been added to user",t,!0)}catch(n){console.log(n),GameFuseUtilities.HandleCallback("undefined"!=typeof response?response:void 0,n.message,t,!1)}}async setScore(e,t){try{if(GameFuse.Log("GameFuseUser Set Score: "+e.toString()),null==GameFuse.getGameId())throw new GameFuseException("Please set up your game with GameFuse.SetUpGame before modifying users");let s=GameFuse.getBaseURL()+"/users/"+GameFuseUser.CurrentUser.id+"/set_score",a={authentication_token:GameFuseUser.CurrentUser.getAuthenticationToken(),score:e},i=await GameFuseUtilities.processRequest(s,{method:"POST",headers:{"Content-Type":"application/json",authentication_token:GameFuseUser.CurrentUser.getAuthenticationToken()},body:JSON.stringify(a)}),r=await GameFuseUtilities.requestIsOk(i);r&&(GameFuse.Log("GameFuseUser Set Score Success: "+e.toString()),this.SetScoreInternal(parseInt(i.data.score))),GameFuseUtilities.HandleCallback(void 0!==i?i:void 0,"Score has been set for user",t,!0)}catch(n){console.log(n),GameFuseUtilities.HandleCallback("undefined"!=typeof response?response:void 0,n.message,t,!1)}}async downloadAttributes(e,t){try{if(GameFuse.Log("GameFuseUser get Attributes"),null==GameFuse.getGameId())throw new GameFuseException("Please set up your game with GameFuse.SetUpGame before modifying users");let s="?authentication_token="+GameFuseUser.CurrentUser.getAuthenticationToken(),a=GameFuse.getBaseURL()+"/users/"+this.id+"/game_user_attributes"+s,i=await GameFuseUtilities.processRequest(a,{method:"GET",headers:{"Content-Type":"application/json",authentication_token:GameFuseUser.CurrentUser.getAuthenticationToken()}}),r=await GameFuseUtilities.requestIsOk(i);if(r){GameFuse.Log("GameFuseUser Get Attributes Success");let n=i.data.game_user_attributes;for(let o of(this.attributes={},n))this.attributes[o.key]=o.value;await this.downloadStoreItems(e,t)}else GameFuseUtilities.HandleCallback(i,e?"Users have been signed in successfully":"User attributes have been downloaded",t,!0)}catch(u){console.log(u),GameFuseUtilities.HandleCallback("undefined"!=typeof response?response:void 0,u.message,t,!1)}}getAttributes(){return this.attributes}getAttributesKeys(){return this.attributes.keys()}getAttributeValue(e){return this.attributes[e]?this.attributes[e]:""}async setAttribute(e,t,s){try{if(GameFuse.Log("GameFuseUser Set Attributes: "+e),null==GameFuse.getGameId())throw new GameFuseException("Please set up your game with GameFuse.SetUpGame before modifying users");let a=GameFuse.getBaseURL()+"/users/"+GameFuseUser.CurrentUser.id+"/add_game_user_attribute",i={authentication_token:GameFuseUser.CurrentUser.getAuthenticationToken(),key:e,value:t},r=await GameFuseUtilities.processRequest(a,{method:"POST",headers:{"Content-Type":"application/json",authentication_token:GameFuseUser.CurrentUser.getAuthenticationToken()},body:JSON.stringify(i)}),n=await GameFuseUtilities.requestIsOk(r);if(n)for(let[o,u]of(GameFuse.Log("GameFuseUser Set Attributes Success: "+e),this.attributes[e]=t,Object.entries(this.attributes)))console.log(o+","+u);GameFuseUtilities.HandleCallback(void 0!==r?r:void 0,"Attribute has been added to user",s,!0)}catch(d){console.log(d),GameFuseUtilities.HandleCallback("undefined"!=typeof response?response:void 0,d.message,s,!1)}}async removeAttribute(e,t){try{if(GameFuse.Log("GameFuseUser Remove Attributes: "+e),null==GameFuse.getGameId())throw new GameFuseException("Please set up your game with GameFuse.SetUpGame before modifying users");let s="?authentication_token="+GameFuseUser.CurrentUser.getAuthenticationToken()+"&game_user_attribute_key="+e,a=GameFuse.getBaseURL()+"/users/"+GameFuseUser.CurrentUser.id+"/remove_game_user_attributes"+s,i=await GameFuseUtilities.processRequest(a,{method:"GET",headers:{"Content-Type":"application/json",authentication_token:GameFuseUser.CurrentUser.getAuthenticationToken()}}),r=await GameFuseUtilities.requestIsOk(i);if(r){GameFuse.Log("GameFuseUser Remove Attributes Success: "+e);let n=i.data.game_user_attributes;for(let o of(this.attributes={},n))attributes.set(o.key,o.value)}GameFuseUtilities.HandleCallback(void 0!==i?i:void 0,"Attribute has been removed",t,!0)}catch(u){console.log(u),GameFuseUtilities.HandleCallback("undefined"!=typeof response?response:void 0,u.message,t,!1)}}async downloadStoreItems(e,t){try{if(GameFuse.Log("GameFuseUser Download Store Items"),null==GameFuse.getGameId())throw new GameFuseException("Please set up your game with GameFuse.SetUpGame before modifying users");let s="?authentication_token="+GameFuseUser.CurrentUser.getAuthenticationToken(),a=GameFuse.getBaseURL()+"/users/"+GameFuseUser.CurrentUser.id+"/game_user_store_items"+s,i=await GameFuseUtilities.processRequest(a,{method:"GET",headers:{"Content-Type":"application/json",authentication_token:GameFuseUser.CurrentUser.getAuthenticationToken()}}),r=await GameFuseUtilities.requestIsOk(i);if(r){GameFuse.Log("GameFuseUser Download Store Items Success");let n=i.data.game_user_store_items;for(let o of(this.purchasedStoreItems=[],n))this.purchasedStoreItems.push(new GameFuseStoreItem(o.name,o.category,o.description,parseInt(o.cost),parseInt(o.id),o.icon_url))}GameFuseUtilities.HandleCallback(i,e?"Users have been signed in successfully":"User store items have been downloaded",t,!0)}catch(u){console.log(u),GameFuseUtilities.HandleCallback("undefined"!=typeof response?response:void 0,u.message,t,!1)}}getPurchasedStoreItems(){return this.purchasedStoreItems}purchaseStoreItem(e,t){e instanceof GameFuseStoreItem?this.purchaseStoreItemRoutine(e.getId(),t):this.purchaseStoreItemRoutine(e,t)}async purchaseStoreItemRoutine(e,t){try{if(GameFuse.Log("GameFuseUser Purchase Store Items: "),null==GameFuse.getGameId())throw new GameFuseException("Please set up your game with GameFuse.SetUpGame before modifying users");let s=new FormData;s.append("authentication_token",GameFuseUser.CurrentUser.getAuthenticationToken()),s.append("store_item_id",e.toString());let a=GameFuse.getBaseURL()+"/users/"+GameFuseUser.CurrentUser.id+"/purchase_game_user_store_item",i=await GameFuseUtilities.processRequest(a,{method:"POST",headers:{authentication_token:GameFuseUser.CurrentUser.getAuthenticationToken()},body:s}),r=await GameFuseUtilities.requestIsOk(i);if(r){GameFuse.Log("GameFuseUser Purchase Store Items Success: ");let n=i.data.game_user_store_items;for(let o of(this.setCreditsInternal(parseInt(i.data.credits)),this.purchasedStoreItems=[],n))this.purchasedStoreItems.push(new GameFuseStoreItem(o.name,o.category,o.description,parseInt(o.cost),parseInt(o.id),o.icon_url))}GameFuseUtilities.HandleCallback(void 0!==i?i:void 0,"Store Item has been purchased by user",t,!0)}catch(u){console.log(u),GameFuseUtilities.HandleCallback("undefined"!=typeof response?response:void 0,u.message,t,!1)}}removeStoreItem(e,t,s){e instanceof GameFuseStoreItem?removeStoreItemRoutine(e.getId(),t,s):removeStoreItemRoutine(e,t,s)}async removeStoreItemRoutine(e,t,s){try{if(GameFuse.Log("GameFuseUser Remove Store Item: "+e),null==GameFuse.getGameId())throw new GameFuseException("Please set up your game with GameFuse.SetUpGame before modifying users");let a="?authentication_token="+GameFuseUser.CurrentUser.getAuthenticationToken()+"&store_item_id="+e+"&reimburse="+t.toString(),i=GameFuse.getBaseURL()+"/users/"+GameFuseUser.CurrentUser.id+"/remove_game_user_store_item"+a,r=await GameFuseUtilities.processRequest(i,{method:"GET",headers:{authentication_token:GameFuseUser.CurrentUser.getAuthenticationToken()}}),n=await GameFuseUtilities.requestIsOk(r);if(n){GameFuse.Log("GameFuseUser Remove Store Item Success: "+e),this.setCreditsInternal(parseInt(r.data.credits));let o=r.data.game_user_store_items;for(let u of(this.purchasedStoreItems=[],o))this.purchasedStoreItems.push(new GameFuseStoreItem(u.name,u.category,u.description,parseInt(u.cost),parseInt(u.id),u.icon_url))}GameFuseUtilities.HandleCallback(void 0!==r?r:void 0,"Store Item has been removed",s,!0)}catch(d){console.log(d),GameFuseUtilities.HandleCallback("undefined"!=typeof response?response:void 0,d.message,s,!1)}}addLeaderboardEntry(e,t,s=null,a){this.addLeaderboardEntryRoutine(e,t,s,a)}async addLeaderboardEntryRoutine(e,t,s,a){try{if(GameFuse.Log("GameFuseUser Adding Leaderboard Entry: "+e+": "+t.toString()),null==GameFuse.getGameId())throw new GameFuseException("Please set up your game with GameFuse.SetUpGame before modifying users");let i=[];for(let[r,n]of Object.entries(s))i.push(`"${r.toString()}": ${n.toString()}`);let o=`{${i.join(", ")}}`,u=new FormData;u.append("authentication_token",GameFuseUser.CurrentUser.getAuthenticationToken()),u.append("leaderboard_name",e),u.append("extra_attributes",o),u.append("score",t);let d=GameFuse.getBaseURL()+"/users/"+GameFuseUser.CurrentUser.id+"/add_leaderboard_entry",m=await GameFuseUtilities.processRequest(d,{method:"POST",headers:{authentication_token:GameFuseUser.CurrentUser.getAuthenticationToken()},body:u}),l=await GameFuseUtilities.requestIsOk(m);l&&GameFuse.Log("GameFuseUser Add Leaderboard Entry: "+e+": "+t),GameFuseUtilities.HandleCallback(void 0!==m?m:void 0,"Leaderboard Entry Has Been Added",a,!0)}catch(c){console.log(c),GameFuseUtilities.HandleCallback("undefined"!=typeof response?response:void 0,c.message,a,!1)}}clearLeaderboardEntries(e,t){clearLeaderboardEntriesRoutine(e,t)}async clearLeaderboardEntriesRoutine(e,t){try{if(GameFuse.Log("GameFuseUser Clearing Leaderboard Entry: "+e),null==GameFuse.getGameId())throw new GameFuseException("Please set up your game with GameFuse.SetUpGame before modifying users");let s=new FormData;s.append("authentication_token",GameFuseUser.CurrentUser.getAuthenticationToken()),s.append("leaderboard_name",e);let a=GameFuse.getBaseURL()+"/users/"+GameFuseUser.CurrentUser.id+"/clear_my_leaderboard_entries",i=await GameFuseUtilities.processRequest(a,{method:"POST",headers:{authentication_token:GameFuseUser.CurrentUser.getAuthenticationToken()},body:s}),r=await GameFuseUtilities.requestIsOk(i);r&&GameFuse.Log("GameFuseUser Clear Leaderboard Entry: "+e),GameFuseUtilities.HandleCallback(void 0!==i?i:void 0,"Leaderboard Entries Have Been Cleared",t,!0)}catch(n){console.log(n),GameFuseUtilities.HandleCallback("undefined"!=typeof response?response:void 0,n.message,t,!1)}}getLeaderboard(e,t,s){this.getLeaderboardRoutine(e,t,s)}async getLeaderboardRoutine(e,t,s){try{if(GameFuse.Log("GameFuseUser Get Leaderboard: "+e.toString()),null==GameFuse.getGameId())throw new GameFuseException("Please set up your game with GameFuse.SetUpGame before modifying users");let a="?authentication_token="+GameFuseUser.CurrentUser.getAuthenticationToken()+"&limit="+e.toString()+"&one_per_user="+t.toString(),i=GameFuse.getBaseURL()+"/users/"+GameFuseUser.CurrentUser.id+"/leaderboard_entries"+a,r=await GameFuseUtilities.processRequest(i,{method:"GET",headers:{authentication_token:GameFuseUser.CurrentUser.getAuthenticationToken()}}),n=await GameFuseUtilities.requestIsOk(r);if(n)for(let o of(GameFuse.Log("GameFuseUser Get Leaderboard Success: : "+e.toString()),GameFuse.Instance.leaderboardEntries=[],r.data.leaderboard_entries))GameFuse.Instance.leaderboardEntries.push(new GameFuseLeaderboardEntry(o.username,parseInt(o.score),o.leaderboard_name,o.extra_attributes,parseInt(o.game_user_id),o.created_at));GameFuseUtilities.HandleCallback(void 0!==r?r:void 0,"Store Item has been removed",s,!0)}catch(u){console.log(u),GameFuseUtilities.HandleCallback("undefined"!=typeof response?response:void 0,u.message,s,!1)}}}class GameFuseUtilities{static async HandleCallback(e,t,s,a=!0){try{if(a){if(void 0==e)s(t,!0);else if(e.status>=400)console.error(`Request (${e.url}) had error: `+e.statusText),null!==s&&s("An unknown error occurred: "+e.statusText,!0);else if(299===e.status){let i=e.data,r=i.error;r.includes("has already been taken")&&(r="Username or email already taken"),null!==s&&s(r,!0)}else null!==s&&s(t,!1)}else s(t,!0)}catch(n){console.error("response had error: "),console.log(n),null!==s&&s("An unknown error occurred: "+n,!0)}}static RequestIsSuccessful(e){return(!e.data||!e.data.error||!(e.data.error.length>0))&&"2"==e.status.toString()[0]}static async processRequest(e,t){let s=await fetch(e,t),a=await s.json();return s.data=a,s}static async requestIsOk(e){let t=e.data;return(!t||!t.error||!(t.error.length>0))&&e.ok}}