class GameFuse{static request;constructor(){this.id="",this.token="",this.name="",this.description="",this.verboseLogging=!1,this.store=[],this.leaderboardEntries=[]}static get Instance(){return this._instance||(this._instance=new GameFuse),this._instance}static getBaseURL(){return"https://gamefuse.co/api/v1"}static getGameId(){return this.Instance.id}static getGameName(){return this.Instance.name}static getGameDescription(){return this.Instance.description}static getGameToken(){return this.Instance.token}static getVerboseLogging(){return this.Instance.verboseLogging}static setVerboseLogging(e){this.Instance.verboseLogging=e}static Log(e){this.getVerboseLogging()&&console.log(`%c ${e}`,"color=green")}Log(e){GameFuse.Log(e)}static setUpGame(e,t,s,a={}){this.Log(`GameFuse Setting Up Game: ${e}: ${t}`),this.Instance.setUpGamePrivate(e,t,s,a)}setUpGamePrivate(e,t,s,a={}){this.setUpGameRoutine(e,t,s,a)}async setUpGameRoutine(e,t,s,a={}){var r=`game_id=${e}&game_token=${t}`;"seedStore"==a.seedStore&&(r+="&seed_store=true"),this.Log(`GameFuse Setting Up Game Sending Request: ${GameFuse.getBaseURL()}/games/verify?${r}`);let i=await GameFuseUtilities.processRequest(`${GameFuse.getBaseURL()}/games/verify?${r}`);i.data.error?(this.Log(`GameFuse Setting Up Game Received Request Failure: ${e}: ${t}`),GameFuseUtilities.HandleCallback(i,"Game has failed to set up!",s)):(this.Log(`GameFuse Setting Up Game Received Request Success: ${e}: ${t}`),this.id=i.data.id.toString(),this.name=i.data.name,this.description=i.data.description,this.token=i.data.token,this.downloadStoreItemsPrivate(s))}downloadStoreItemsPrivate(e){this.downloadStoreItemsRoutine(e)}async downloadStoreItemsRoutine(e){this.Log("GameFuse Downloading Store Items");let t=`game_id=${this.id}&game_token=${this.token}`,s=await GameFuseUtilities.processRequest(`${GameFuse.getBaseURL()}/games/store_items?${t}`);s.ok?(this.Log("GameFuse Downloading Store Items Success"),this.Log(s.data.store_items),this.store=s.data.store_items.map(e=>new GameFuseStoreItem(e.name,e.category,e.description,parseInt(e.cost),parseInt(e.id)))):(GameFuseUtilities.HandleCallback(s,"Game has failed to set up!",e),this.Log("GameFuse Downloading Store Items Failed")),GameFuseUtilities.HandleCallback(s,"Game has been set up!",e)}static getStoreItems(){return this.Instance.store}static signIn(e,t,s){this.Instance.signInPrivate(e,t,s)}async signInPrivate(e,t,s){await this.signInRoutine(e,t,s)}async signInRoutine(e,t,s){if(this.Log(`GameFuse Sign In: ${e}`),null==GameFuse.getGameId())throw Error("Please set up your game with PainLessAuth.SetUpGame before signing in users");let a=new FormData;a.append("email",e),a.append("password",t),a.append("game_id",GameFuse.getGameId());let r=await GameFuseUtilities.processRequest(`${GameFuse.getBaseURL()}/sessions`,{method:"POST",body:a});r.ok?(this.Log(`GameFuse Sign In Success: ${e}`),GameFuseUser.CurrentUser.setSignedInInternal(),GameFuseUser.CurrentUser.setScoreInternal(parseInt(r.data.score)),GameFuseUser.CurrentUser.setCreditsInternal(parseInt(r.data.credits)),GameFuseUser.CurrentUser.setUsernameInternal(r.data.username),GameFuseUser.CurrentUser.setLastLoginInternal(new Date(r.data.last_login)),GameFuseUser.CurrentUser.setNumberOfLoginsInternal(parseInt(r.data.number_of_logins)),GameFuseUser.CurrentUser.setAuthenticationTokenInternal(r.data.authentication_token),GameFuseUser.CurrentUser.setIDInternal(parseInt(r.data.id)),GameFuseUser.CurrentUser.DownloadAttributes(!0,s)):(this.Log(`GameFuse Sign In Failure: ${e}`),GameFuseUtilities.HandleCallback(r,"User has been signed in successfully",s))}static signUp(e,t,s,a,r){this.Instance.signUpPrivate(e,t,s,a,r)}signUpPrivate(e,t,s,a,r){this.signUpRoutine(e,t,s,a,r)}async signUpRoutine(e,t,s,a,r){if(console.log("GameFuse Sign Up: "+e),null==GameFuse.getGameId())throw new GameFuseException("Please set up your game with PainLessAuth.SetUpGame before signing up users");let i=new FormData;i.append("email",e),i.append("password",t),i.append("password_confirmation",s),i.append("username",a),i.append("game_id",GameFuse.getGameId()),i.append("game_token",GameFuse.getGameToken());try{let n=await GameFuseUtilities.processRequest(GameFuse.getBaseURL()+"/users",{method:"POST",body:i});GameFuseUtilities.RequestIsSuccessful(n)?(console.log("GameFuse Sign Up Success: "+e),GameFuseUser.CurrentUser.setSignedInInternal(),GameFuseUser.CurrentUser.setScoreInternal(parseInt(n.data.score)),GameFuseUser.CurrentUser.setCreditsInternal(parseInt(n.data.credits)),GameFuseUser.CurrentUser.setUsernameInternal(n.data.username),GameFuseUser.CurrentUser.setLastLoginInternal(new Date(n.data.last_login)),GameFuseUser.CurrentUser.setNumberOfLoginsInternal(parseInt(n.data.number_of_logins)),GameFuseUser.CurrentUser.setAuthenticationTokenInternal(n.data.authentication_token),GameFuseUser.CurrentUser.setIDInternal(parseInt(n.data.id)),await GameFuseUser.CurrentUser.downloadAttributes(!0,r)):(console.log("GameFuse Sign Up Failure: "+e),await GameFuseUtilities.HandleCallback(n,"User could not sign up: "+n.error,r))}catch(u){console.error("GameFuse Sign Up Error: "+u),null!==r&&r("An unknown error occurred: "+u,!0)}}getLeaderboard(e,t,s,a){this.getLeaderboardRoutine(e,t,s,a)}async getLeaderboardRoutine(e,t,s,a){try{if(GameFuse.Log("GameFuse Get Leaderboard: "+e.toString()),null==GameFuse.getGameId())throw new GameFuseException("Please set up your game with GameFuse.SetUpGame before modifying users");let r="?authentication_token="+GameFuseUser.CurrentUser.getAuthenticationToken()+"&limit="+e.toString()+"&one_per_user="+t.toString()+"&leaderboard_name="+s.toString(),i=GameFuse.getBaseURL()+"/games/"+GameFuse.getGameId()+"/leaderboard_entries"+r,n=await GameFuseUtilities.processRequest(i,{method:"GET",headers:{"Content-Type":"application/json",authentication_token:GameFuseUser.CurrentUser.getAuthenticationToken()}});if(n.ok){GameFuse.Log("GameFuse Get Leaderboard Success: : "+e.toString());let u=n.data.leaderboard_entries;for(let o of(GameFuse.Instance.leaderboardEntries=[],u))GameFuse.Instance.leaderboardEntries.push(new GameFuseLeaderboardEntry(o.username,parseInt(o.score),o.leaderboard_name,o.extra_attributes,parseInt(o.game_user_id)))}GameFuseUtilities.HandleCallback(n,"Leaderboard recieved",a)}catch(m){console.log(m),GameFuseUtilities.HandleCallback(response,m.message,a)}}}class GameFuseLeaderboardEntry{constructor(e,t,s,a,r){this.username=e,this.score=t,this.leaderboard_name=s,this.extra_attributes=a,this.game_user_id=r}getUsername(){return this.username}getScore(){return this.score}getLeaderboardName(){return this.leaderboard_name}getExtraAttributes(){let e=this.extra_attributes.replace("\\","").replace("{","").replace("}","").replace(", ",",").replace(": ",":").split(",").map(e=>e.split(":")).filter(e=>2===e.length).reduce((e,[t,s])=>(e[t.replace('"',"")]=s.replace('"',""),e),{});return e}}class GameFuseStoreItem{constructor(e,t,s,a,r){this.name=e,this.category=t,this.description=s,this.cost=a,this.id=r}getName(){return this.name}getCategory(){return this.category}getDescription(){return this.description}getCost(){return this.cost}getId(){return this.id}}class GameFuseUser{constructor(e=!1,t=0,s,a="",r="",i=0,n=0,u=0,o={},m=[]){this.signedIn=e,this.numberOfLogins=t,this.lastLogin=s,this.authenticationToken=a,this.username=r,this.score=i,this.credits=n,this.id=u,this.attributes=o,this.purchasedStoreItems=m}static get CurrentUser(){return this._instance||(this._instance=new GameFuseUser),this._instance}setSignedInInternal(){this.signedIn=!0}setNumberOfLoginsInternal(e){this.numberOfLogins=e}setLastLoginInternal(e){this.lastLogin=e}setAuthenticationTokenInternal(e){this.authenticationToken=e}setUsernameInternal(e){this.username=e}setScoreInternal(e){this.score=e}setCreditsInternal(e){this.credits=e}setIDInternal(e){this.id=e}IsSignedIn(){return this.signedIn}getNumberOfLogins(){return this.numberOfLogins}getLastLogin(){return this.lastLogin}getAuthenticationToken(){return this.authenticationToken}getUsername(){return this.username}getScore(){return this.score}getCredits(){return this.credits}getID(){return this.id}async addCredits(e,t){try{if(GameFuse.Log("GameFuseUser Add Credits: "+e.toString()),null==GameFuse.getGameId())throw new GameFuseException("Please set up your game with GameFuse.SetUpGame before modifying users");let s=GameFuse.getBaseURL()+"/users/"+GameFuseUser.CurrentUser.id+"/add_credits",a={authentication_token:GameFuseUser.CurrentUser.getAuthenticationToken(),credits:e},r=await GameFuseUtilities.processRequest(s,{method:"POST",headers:{"Content-Type":"application/json",authentication_token:GameFuseUser.CurrentUser.getAuthenticationToken()},body:JSON.stringify(a)});r.ok?(GameFuse.Log("GameFuseUser Add Credits Success: "+e.toString()),this.setCreditsInternal(parseInt(r.data.credits)),GameFuseUtilities.HandleCallback(r,"Credits Added!",t)):(GameFuse.Log("GameFuseUser Add Credits Failure: "+e.toString()),GameFuseUtilities.HandleCallback(r,"Credits Failed To Add!",t))}catch(i){console.log(i),GameFuseUtilities.HandleCallback(response,i.message,t)}}async setCredits(e,t){try{if(GameFuse.Log("GameFuseUser Set Credits: "+e.toString()),null==GameFuse.getGameId())throw new GameFuseException("Please set up your game with GameFuse.SetUpGame before modifying users");let s=GameFuse.getBaseURL()+"/users/"+GameFuseUser.CurrentUser.id+"/set_credits",a={authentication_token:GameFuseUser.CurrentUser.getAuthenticationToken(),credits:e},r=await GameFuseUtilities.processRequest(s,{method:"POST",headers:{"Content-Type":"application/json",authentication_token:GameFuseUser.CurrentUser.getAuthenticationToken()},body:JSON.stringify(a)});r.ok?(GameFuse.Log("GameFuseUser Set Credits Success: "+e.toString()),this.setCreditsInternal(parseInt(json.credits))):GameFuse.Log("GameFuseUser Set Credits Failure: "+e.toString()),GameFuseUtilities.HandleCallback(r,"Credits Added!",t)}catch(i){console.log(i),GameFuseUtilities.HandleCallback(response,i.message,t)}}async addScore(e,t){try{if(GameFuse.Log("GameFuseUser Add Score: "+e.toString()),null==GameFuse.getGameId())throw new GameFuseException("Please set up your game with GameFuse.SetUpGame before modifying users");let s=GameFuse.getBaseURL()+"/users/"+GameFuseUser.CurrentUser.id+"/add_score",a={authentication_token:GameFuseUser.CurrentUser.getAuthenticationToken(),score:e},r=await GameFuseUtilities.processRequest(s,{method:"POST",headers:{"Content-Type":"application/json",authentication_token:GameFuseUser.CurrentUser.getAuthenticationToken()},body:JSON.stringify(a)});r.ok&&(GameFuse.Log("GameFuseUser Add Score Succcess: "+e.toString()),this.SetScoreInternal(parseInt(r.data.score))),GameFuseUtilities.HandleCallback(r,"Score has been added to user",t)}catch(i){console.log(i),GameFuseUtilities.HandleCallback(response,i.message,t)}}async setScore(e,t){try{if(GameFuse.Log("GameFuseUser Set Score: "+e.toString()),null==GameFuse.getGameId())throw new GameFuseException("Please set up your game with GameFuse.SetUpGame before modifying users");let s=GameFuse.getBaseURL()+"/users/"+GameFuseUser.CurrentUser.id+"/set_score",a={authentication_token:GameFuseUser.CurrentUser.getAuthenticationToken(),score:e},r=await GameFuseUtilities.processRequest(s,{method:"POST",headers:{"Content-Type":"application/json",authentication_token:GameFuseUser.CurrentUser.getAuthenticationToken()},body:JSON.stringify(a)});r.ok&&(GameFuse.Log("GameFuseUser Set Score Success: "+e.toString()),this.SetScoreInternal(parseInt(r.data.score))),GameFuseUtilities.HandleCallback(r,"Score has been set for user",t)}catch(i){console.log(i),GameFuseUtilities.HandleCallback(response,i.message,t)}}async downloadAttributes(e,t){try{if(GameFuse.Log("GameFuseUser get Attributes"),null==GameFuse.getGameId())throw new GameFuseException("Please set up your game with GameFuse.SetUpGame before modifying users");let s="?authentication_token="+GameFuseUser.CurrentUser.getAuthenticationToken(),a=GameFuse.getBaseURL()+"/users/"+this.id+"/game_user_attributes"+s,r=await GameFuseUtilities.processRequest(a,{method:"GET",headers:{"Content-Type":"application/json",authentication_token:GameFuseUser.CurrentUser.getAuthenticationToken()}});if(r.ok){GameFuse.Log("GameFuseUser Get Attributes Success");let i=r.data.game_user_attributes;for(let n of(this.attributes={},i))this.attributes[n.key]=n.value;await this.downloadStoreItems(e,t)}else GameFuseUtilities.HandleCallback(r,e?"Users have been signed in successfully":"User attributes have been downloaded",t)}catch(u){console.log(u),GameFuseUtilities.HandleCallback(response,u.message,t)}}getAttributes(){return this.attributes}getAttributesKeys(){return this.attributes.keys()}getAttributeValue(e){return this.attributes[e]?this.attributes[e]:""}async setAttribute(e,t,s){try{if(GameFuse.Log("GameFuseUser Set Attributes: "+e),null==GameFuse.getGameId())throw new GameFuseException("Please set up your game with GameFuse.SetUpGame before modifying users");let a=GameFuse.getBaseURL()+"/users/"+GameFuseUser.CurrentUser.id+"/add_game_user_attribute",r={authentication_token:GameFuseUser.CurrentUser.getAuthenticationToken(),key:e,value:t},i=await GameFuseUtilities.processRequest(a,{method:"POST",headers:{"Content-Type":"application/json",authentication_token:GameFuseUser.CurrentUser.getAuthenticationToken()},body:JSON.stringify(r)});if(i.ok)for(let[n,u]of(GameFuse.Log("GameFuseUser Set Attributes Success: "+e),this.attributes[e]=t,Object.entries(this.attributes)))console.log(n+","+u);GameFuseUtilities.HandleCallback(i,"Attribute has been added to user",s)}catch(o){console.log(o),GameFuseUtilities.HandleCallback(response,o.message,s)}}async removeAttribute(e,t){try{if(GameFuse.Log("GameFuseUser Remove Attributes: "+e),null==GameFuse.getGameId())throw new GameFuseException("Please set up your game with GameFuse.SetUpGame before modifying users");let s="?authentication_token="+GameFuseUser.CurrentUser.getAuthenticationToken()+"&game_user_attribute_key="+e,a=GameFuse.getBaseURL()+"/users/"+GameFuseUser.CurrentUser.id+"/remove_game_user_attributes"+s,r=await GameFuseUtilities.processRequest(a,{method:"GET",headers:{"Content-Type":"application/json",authentication_token:GameFuseUser.CurrentUser.getAuthenticationToken()}});if(r.ok){GameFuse.Log("GameFuseUser Remove Attributes Success: "+e);let i=r.data.game_user_attributes;for(let n of(this.attributes={},i))attributes.set(n.key,n.value)}GameFuseUtilities.HandleCallback(r,"Attribute has been removed",t)}catch(u){console.log(u),GameFuseUtilities.HandleCallback(response,u.message,t)}}async downloadStoreItems(e,t){try{if(GameFuse.Log("GameFuseUser Download Store Items"),null==GameFuse.getGameId())throw new GameFuseException("Please set up your game with GameFuse.SetUpGame before modifying users");let s="?authentication_token="+GameFuseUser.CurrentUser.getAuthenticationToken(),a=GameFuse.getBaseURL()+"/users/"+GameFuseUser.CurrentUser.id+"/game_user_store_items"+s,r=await GameFuseUtilities.processRequest(a,{method:"GET",headers:{"Content-Type":"application/json",authentication_token:GameFuseUser.CurrentUser.getAuthenticationToken()}});if(r.ok){GameFuse.Log("GameFuseUser Download Store Items Success");let i=r.data.game_user_store_items;for(let n of(this.purchasedStoreItems=[],i))this.purchasedStoreItems.push(new GameFuseStoreItem(n.name,n.category,n.description,parseInt(n.cost),parseInt(n.id)))}GameFuseUtilities.HandleCallback(r,e?"Users have been signed in successfully":"User store items have been downloaded",t)}catch(u){console.log(u),GameFuseUtilities.HandleCallback(response,u.message,t)}}getPurchasedStoreItems(){return this.purchasedStoreItems}purchaseStoreItem(e,t){e instanceof GameFuseStoreItem?this.purchaseStoreItemRoutine(e.getId(),t):this.purchaseStoreItemRoutine(e,t)}async purchaseStoreItemRoutine(e,t){try{if(GameFuse.Log("GameFuseUser Purchase Store Items: "),null==GameFuse.getGameId())throw new GameFuseException("Please set up your game with GameFuse.SetUpGame before modifying users");let s=new FormData;s.append("authentication_token",GameFuseUser.CurrentUser.getAuthenticationToken()),s.append("store_item_id",e.toString());let a=GameFuse.getBaseURL()+"/users/"+GameFuseUser.CurrentUser.id+"/purchase_game_user_store_item",r=await GameFuseUtilities.processRequest(a,{method:"POST",headers:{authentication_token:GameFuseUser.CurrentUser.getAuthenticationToken()},body:s});if(r.ok){GameFuse.Log("GameFuseUser Purchase Store Items Success: ");let i=r.data.game_user_store_items;for(let n of(this.setCreditsInternal(parseInt(r.data.credits)),this.purchasedStoreItems=[],i))this.purchasedStoreItems.push(new GameFuseStoreItem(n.name,n.category,n.description,parseInt(n.cost),parseInt(n.id)))}GameFuseUtilities.HandleCallback(r,"Store Item has been purchased by user",t)}catch(u){console.log(u),GameFuseUtilities.HandleCallback(response,u.message,t)}}removeStoreItem(e,t,s){e instanceof GameFuseStoreItem?removeStoreItemRoutine(e.getId(),t,s):removeStoreItemRoutine(e,t,s)}async removeStoreItemRoutine(e,t,s){try{if(GameFuse.Log("GameFuseUser Remove Store Item: "+e),null==GameFuse.getGameId())throw new GameFuseException("Please set up your game with GameFuse.SetUpGame before modifying users");let a="?authentication_token="+GameFuseUser.CurrentUser.getAuthenticationToken()+"&store_item_id="+e+"&reimburse="+t.toString(),r=GameFuse.getBaseURL()+"/users/"+GameFuseUser.CurrentUser.id+"/remove_game_user_store_item"+a,i=await GameFuseUtilities.processRequest(r,{method:"GET",headers:{authentication_token:GameFuseUser.CurrentUser.getAuthenticationToken()}});if(i.ok){GameFuse.Log("GameFuseUser Remove Store Item Success: "+e),this.setCreditsInternal(parseInt(i.data.credits));let n=i.data.game_user_store_items;for(let u of(this.purchasedStoreItems=[],n))this.purchasedStoreItems.push(new GameFuseStoreItem(u.name,u.category,u.description,parseInt(u.cost),parseInt(u.id)))}GameFuseUtilities.HandleCallback(i,"Store Item has been removed",s)}catch(o){console.log(o),GameFuseUtilities.HandleCallback(response,o.message,s)}}addLeaderboardEntry(e,t,s=null,a){this.addLeaderboardEntryRoutine(e,t,s,a)}async addLeaderboardEntryRoutine(e,t,s,a){try{if(GameFuse.Log("GameFuseUser Adding Leaderboard Entry: "+e+": "+t.toString()),null==GameFuse.getGameId())throw new GameFuseException("Please set up your game with GameFuse.SetUpGame before modifying users");let r=[];for(let[i,n]of Object.entries(s))r.push(`"${i.toString()}": ${n.toString()}`);let u=`{${r.join(", ")}}`,o=new FormData;o.append("authentication_token",GameFuseUser.CurrentUser.getAuthenticationToken()),o.append("leaderboard_name",e),o.append("extra_attributes",u),o.append("score",t);let m=GameFuse.getBaseURL()+"/users/"+GameFuseUser.CurrentUser.id+"/add_leaderboard_entry",d=await GameFuseUtilities.processRequest(m,{method:"POST",headers:{authentication_token:GameFuseUser.CurrentUser.getAuthenticationToken()},body:o});d.ok&&GameFuse.Log("GameFuseUser Add Leaderboard Entry: "+e+": "+t),GameFuseUtilities.HandleCallback(d,"Leaderboard Entry Has Been Added",a)}catch(l){console.log(l),GameFuseUtilities.HandleCallback(response,l.message,a)}}clearLeaderboardEntries(e,t){clearLeaderboardEntriesRoutine(e,t)}async clearLeaderboardEntriesRoutine(e,t){try{if(GameFuse.Log("GameFuseUser Clearing Leaderboard Entry: "+e),null==GameFuse.getGameId())throw new GameFuseException("Please set up your game with GameFuse.SetUpGame before modifying users");let s=new FormData;s.append("authentication_token",GameFuseUser.CurrentUser.getAuthenticationToken()),s.append("leaderboard_name",e);let a=GameFuse.getBaseURL()+"/users/"+GameFuseUser.CurrentUser.id+"/clear_my_leaderboard_entries",r=await GameFuseUtilities.processRequest(a,{method:"POST",headers:{authentication_token:GameFuseUser.CurrentUser.getAuthenticationToken()},body:s});r.ok&&GameFuse.Log("GameFuseUser Clear Leaderboard Entry: "+e),GameFuseUtilities.HandleCallback(r,"Leaderboard Entries Have Been Cleared",t)}catch(i){console.log(i),GameFuseUtilities.HandleCallback(response,i.message,t)}}getLeaderboard(e,t,s){this.getLeaderboardRoutine(e,t,s)}async getLeaderboardRoutine(e,t,s){try{if(GameFuse.Log("GameFuseUser Get Leaderboard: "+e.toString()),null==GameFuse.getGameId())throw new GameFuseException("Please set up your game with GameFuse.SetUpGame before modifying users");let a="?authentication_token="+GameFuseUser.CurrentUser.getAuthenticationToken()+"&limit="+e.toString()+"&one_per_user="+t.toString(),r=GameFuse.getBaseURL()+"/users/"+GameFuseUser.CurrentUser.id+"/leaderboard_entries"+a,i=await GameFuseUtilities.processRequest(r,{method:"GET",headers:{authentication_token:GameFuseUser.CurrentUser.getAuthenticationToken()}});if(i.ok)for(let n of(GameFuse.Log("GameFuseUser Get Leaderboard Success: : "+e.toString()),GameFuse.Instance.leaderboardEntries=[],i.data.leaderboard_entries))GameFuse.Instance.leaderboardEntries.push(new GameFuseLeaderboardEntry(n.username,parseInt(n.score),n.leaderboard_name,n.extra_attributes,parseInt(n.game_user_id)));GameFuseUtilities.HandleCallback(i,"Store Item has been removed",s)}catch(u){console.log(u),GameFuseUtilities.HandleCallback(response,u.message,s)}}}class GameFuseUtilities{static async HandleCallback(e,t,s){try{if(e.status>=400)console.error(`Request (${e.url}) had error: `+e.statusText),null!==s&&s("An unknown error occurred: "+e.statusText,!0);else if(299===e.status){let a=e.data,r=a.error;r.includes("has already been taken")&&(r="Username or email already taken"),null!==s&&s(r,!0)}else null!==s&&s(t,!1)}catch(i){console.error("response had error: "),console.log(i),null!==s&&s("An unknown error occurred: "+i,!0)}}static RequestIsSuccessful(e){return 0!==e.status&&404!==e.status&&500!==e.status}static async processRequest(e,t){let s=await fetch(e,t),a=await s.json();return a&&a.error&&(s.status=501,s.ok=!1),s.data=a,s}}